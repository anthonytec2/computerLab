
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package year;
//Imports
import year.Home;
import year.User;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author abisulco
 */
//The book class is mainly used to obtain information in order to book a class
public class Book extends javax.swing.JFrame {
public String teacherName; //Variable used to store teacher name
public int clNum; //Variable used to store cl num
public  User l; //Object used in order to store all essential data for the program
    /**
     * Creates new form Book
     */
     //Book constructor which takes in a user which is used to store all the information used in the program and also takes in clnum which is given based off the book button clicked from the main form
    public Book(User h,int clnum) { 
        initComponents(); //Intializes all main components on the form
        l=h; //Stores the user from the constructor
        teacherName=h.getTeacher(); //teacher name is stored
        clNum=clnum; // cl num is stores
        jTextField1.setText(l.returnLast());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     //Generated code by netnean gui builder Begining
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Date:");

        jLabel2.setText("Period:");

        jLabel3.setText("Status:");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(122, 122, 122)
                .add(jLabel4)
                .addContainerGap(278, Short.MAX_VALUE))
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(42, 42, 42)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jLabel3)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1)))
                    .add(18, 18, 18)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout.createSequentialGroup()
                                    .add(jButton1)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(layout.createSequentialGroup()
                                    .add(jTextField2)
                                    .add(46, 46, 46)))
                            .add(jButton2))
                        .add(layout.createSequentialGroup()
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(42, 42, 42)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .add(jLabel4)
                .add(59, 59, 59))
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(67, 67, 67)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel1))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(34, 34, 34)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel2)))
                        .add(layout.createSequentialGroup()
                            .add(15, 15, 15)
                            .add(jButton2)))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE)
                    .add(jButton1)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jLabel3)
                    .add(67, 67, 67)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 //Generated code by netnean gui builder End
    
    
    
    
    
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
       
        
        
        
        
    }//GEN-LAST:event_jTextField2ActionPerformed
    //Method that when a Back button is pressed then it will navigate back to the main form
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);   //Sets current form to be not visible
        new Home(l).setVisible(true); //Sets main form to be visible
          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       jLabel4.setText(""); //Clears text from booked or not booked slot
        if(jTextField1.getText().length()==0||jTextField2.getText().length()==0){ //checks if there is anything in text fields
           JOptionPane.showMessageDialog(null, "ERROR input not accepted");
       }else{
           
           String raw=jTextField1.getText(); //obtains what is in the textfield
           
       if(raw.length()==10&&jTextField2.getText().length()==1){ //makes sure whats in the textfield is the correct length
           //intialized variables in order for the use of them if the catch of the next statment does not catch
           int per=0; 
           int month=0;
           int day=0;
           int year=0;
            try{ //Makes sure that the text in the textfield is numbers if not it will get catched
               per=Integer.parseInt(jTextField2.getText());//intializes the period 
               month=Integer.parseInt(raw.substring(0, 2)); //intializes the month from the substring in the textfield
               day=Integer.parseInt(raw.substring(3, 5));//intializes the day from the substring in the textfield
               year=Integer.parseInt(raw.substring(6, 10));//intializes the year from the substring in the textfield
               
            } 
            catch (NumberFormatException e){ //Catch if numbers cannot be formated to ints
              JOptionPane.showMessageDialog(null, "ERROR In data entered check again"); //Displays error message if cannot be fomated to int  
             return;   //ends method so bad variables cannot be used if not able to format to int
             }                  
           
           if(per==0){ //makes sure that the period cannot be 0 it must be 1-9
              JOptionPane.showMessageDialog(null, "ERROR period cannot be 0");// displays cannot be 0 it must be 1-9
               return;  //ends the method so per cannot be used
           }
           
           try {//This method call deals with file IO so in case the file in not able to open or any other errors it will catch
                l.add(year, month, day, clNum-1, per-1, teacherName); //Inputs paramters in order to add user
            } catch (FileNotFoundException ex) { //cataches if file is not able to be found
                Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex); //LOGS ERROR
                JOptionPane.showMessageDialog(null, "ERROR cannot write current booking please try again later");  //prints error message
            } catch (IOException ex) { //catches if any IO error occurs
                Logger.getLogger(Book.class.getName()).log(Level.SEVERE, null, ex);//LOGS ERROR
                JOptionPane.showMessageDialog(null, "ERROR cannot write current booking please try again later"); //prints error message
            }
           if(l.getNum()==0){ //Checks if the booking was successful
               jLabel4.setText("Not Available"); //if the returned result is 0 then the booking was not booked
           }else if(l.getNum()==1){//Checks if the booking was successful
               jLabel4.setText("Booked");//if the returned result is 1 then the booking was  booked
           }
           
       }else{
       JOptionPane.showMessageDialog(null, "ERROR input not accepted");//Error message if input is not acceptable
       }
        }
       
       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    //Generated code by netnean gui builder
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
