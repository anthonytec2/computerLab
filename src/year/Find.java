/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package year;

import year.Home;
import year.User;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultListModel;

/**
 *
 * @author abisulco
 */
public class Find extends javax.swing.JFrame {
public String teacherName;//used to find booking occurences
public User o;//used to pass data from form to form
    /**
     * Creates new form Search
     */
    public Find(User r) {
        initComponents();// intializes the form
        teacherName=r.getTeacher();//gets the log in name
        o=r;//stores user object
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     //Generated code by netnean gui builder Begining
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Found Bookings");

        jButton2.setText("Enter");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(128, 128, 128)
                        .add(jLabel1))
                    .add(layout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .add(jTextField1))))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel2)
                    .add(jButton1))
                .add(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jLabel1)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(39, 39, 39)
                        .add(jButton2)
                        .add(18, 18, 18)
                        .add(jLabel2)
                        .add(41, 41, 41)))
                .add(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 //Generated code by netnean gui builder End
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);//sets currents screen visible to false
        
        new Home(o).setVisible(true);//sets home screen visible to true
        
    }//GEN-LAST:event_jButton1ActionPerformed
//Checks if a user is a user or admin and displays found bookings
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         if(teacherName.equals("admin")){//if the user is an admin then they can also search for any other found bookings of another teacher so they have form to do this
            jTextField1.setVisible(true);
            jButton2.setVisible(true);
            jLabel2.setVisible(true);
       
        }else{//all extra admin features are not visible
             jTextField1.setVisible(false);
             jButton2.setVisible(false);
             jLabel2.setVisible(false);
        }
        //See remove class method formWindowOpened for comments
        ArrayList<String> kol=o.find(teacherName);
     DefaultListModel model1 =new DefaultListModel(); 
     

     for(int i=0;kol.size()>i;i=i+1){
            int x=Integer.parseInt(kol.get(i).substring(2));
            Calendar caq=Calendar.getInstance();
	    caq.set(Calendar.DAY_OF_YEAR, x);
            String e=(caq.get(Calendar.MONTH)+1)+"/"+caq.get(Calendar.DATE)+"/"+caq.get(Calendar.YEAR);
           model1.addElement(String.valueOf(i)+o.returnCl(Integer.parseInt(kol.get(i).substring(0,1)))+" Period "+(Integer.parseInt(kol.get(i).substring(1,2))+1)+" Date "+e);
    }
    jList1.setModel(model1);
   
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
         
    
    }//GEN-LAST:event_formWindowActivated
//ADMIN only method used to allow for the search of another teacher
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String h=jTextField1.getText();//allows one to enter teacher name
         jLabel2.setText(h);//teachername being searched is put into a txt label
         //The only difference betweem this method and the user method is the find methods find a teacher not currently logged on using the current user name
      //See remove class method formWindowOpened for comments           
        ArrayList<String> kol=o.find(h);
     DefaultListModel model1 =new DefaultListModel(); 
     

     for(int i=0;kol.size()>i;i=i+1){
            int x=Integer.parseInt(kol.get(i).substring(2));
            Calendar caq=Calendar.getInstance();
	    caq.set(Calendar.DAY_OF_YEAR, x);
            String e=(caq.get(Calendar.MONTH)+1)+"/"+caq.get(Calendar.DATE)+"/"+caq.get(Calendar.YEAR);
           model1.addElement(String.valueOf(i)+o.returnCl(Integer.parseInt(kol.get(i).substring(0,1)))+" Period "+(Integer.parseInt(kol.get(i).substring(1,2))+1)+" Date "+e);
    }
    jList1.setModel(model1);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
